{"version":3,"sources":["reportWebVitals.js","config.js","components/HeaderDashboard.jsx","utils/utils.js","components/posts/PostItem.jsx","utils/api.js","components/posts/AddPost.jsx","utils/apicalls.js","components/posts/EditPost.jsx","components/posts/MyPostList.jsx","components/posts/PostList.jsx","images/icon.ico","components/App.jsx","index.js","components/Home.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","config","baseURL_API","process","clientID","HeaderDashboard","props","Navbar","color","light","expand","NavbarBrand","className","sessionStorage","getItem","Collapse","navbar","Nav","NavItem","NavLink","href","onClick","onShow","clientId","buttonText","theme","onLogoutSuccess","onLogout","monthNames","dayNames","PostItem","date","useState","post","corazon","corazones","setCor","isCorToggle","setCorToggle","isRtToggle","setRtToggle","retuit","retuits","setRt","toggleClass","elem_id","document","getElementById","classList","toggle","includes","parseInt","Row","Col","Card","CardBody","src","image","alt","user","message","id","indice","Date","publicationdate","getDay","getDate","getMonth","getFullYear","getHours","slice","getMinutes","getSeconds","axios","create","baseURL","AddPost","setMessage","checkPOSTNewPost","res","updateMyPosts","body","CardTitle","tag","Form","FormGroup","Label","for","Input","style","height","type","name","value","placeholder","onChange","e","target","Button","preventDefault","Math","floor","random","email","API","result","data","postNewPost","EditPost","checkPUTPost","useEffect","idpost","put","putExistingPost","_id","MyPostList","posts","setPosts","Alert","edit","setEdit","activeTab","setActiveTab","showDeleteModal","setShowDeleteModal","getPosts","get","toggleTab","tab","handleUpdateMyPosts","deletePostSel","delete","checkDELETEPost","xs","Badge","pill","length","Table","map","index","outline","handleShowEdit","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","askForDelete","tabs","classnames","active","TabContent","TabPane","tabId","sm","PostList","imgStyle","maxWidth","ReactDOM","render","exact","path","component","loginMessage","setLoginMessage","toastColor","setToastColor","show","setShow","timeoutToast","window","setTimeout","Container","Toast","ToastHeader","icon","ToastBody","size","Media","object","tuiter_icon","onSuccess","googleUser","profile","getBasicProfile","setItem","getName","getEmail","getImageUrl","history","push","onFailure","response","clear","option"],"mappings":"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","file":"static/js/main.d1788970.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const config = {\n    baseURL_API: process.env.REACT_APP_APIURI,\n    clientID: process.env.REACT_APP_CLIENTID\n  }\n  \n  export default config;","import React from 'react';\nimport { Collapse, Navbar, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\nimport { FaCogs } from 'react-icons/fa';\nimport { GoogleLogout } from 'react-google-login';\nimport config from '../config.js';\n\nexport default function HeaderDashboard(props){\n\n  return (\n    <Navbar color=\"primary\" light expand=\"md\">\n      <NavbarBrand><FaCogs color=\"white\"/><span className=\"text-white\"><strong> Usuario:</strong> {sessionStorage.getItem('name')}</span></NavbarBrand>\n      <Collapse navbar>\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink href=\"#\" onClick={() => props.onShow(1)}><span className=\"text-white\">Todos los Posts</span></NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink href=\"#\" onClick={() => props.onShow(2)}><span className=\"text-white\">Mis Posts</span></NavLink>\n          </NavItem>\n          <NavItem>\n            <GoogleLogout\n              clientId={config.clientID}\n              buttonText=\"Logout\"\n              theme='dark'\n              onLogoutSuccess={props.onLogout}\n            />\n          </NavItem>\n        </Nav>\n      </Collapse>\n  </Navbar>\n  );\n}","export {\n    getDateInStrFormat\n  };\n  \n  /* Formatting date */\n  const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n  \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\",\"Fri\", \"Sat\"];\n  \n  function getDateInStrFormat(date){\n    var strformatted = dayNames[date.getDay()]+\", \"+\n                       date.getDate()+\" \"+\n                       monthNames[date.getMonth()]+\" \"+\n                       date.getFullYear()+\", \"+\n                       (\"0\" + date.getHours()).slice(-2)+\":\"+\n                       (\"0\" + date.getMinutes()).slice(-2)+\":\"+\n                       (\"0\" + date.getSeconds()).slice(-2);\n    return strformatted;\n  }\n  /* End formatting date */","\n\nimport React, { useState } from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\nimport '../../styles.css';\nimport '../css/PostList.css'\n\nimport { AiFillHeart, AiOutlineRetweet } from 'react-icons/ai';\nimport { BsChat } from \"react-icons/bs\";\n\nimport { getDateInStrFormat } from \"../../utils/utils.js\";\n\nexport default function PostItem(props){\n    const [corazones, setCor] = useState(props.post.corazon);\n    const [isCorToggle, setCorToggle] = useState(false);\n    const [isRtToggle, setRtToggle] = useState(false);\n    const [retuits, setRt] = useState(props.post.retuit);\n\n    const toggleClass = (elem_id) =>{\n        var div_heart = document.getElementById(elem_id);\n        div_heart.classList.toggle('activado');\n        if(elem_id.includes('retuit')){\n            if(!isRtToggle){\n                setRt(parseInt(retuits)+1)\n                setRtToggle(true)\n            }else{\n                setRt(parseInt(retuits)-1)\n                setRtToggle(false)\n            }\n        }\n        if(elem_id.includes('corazon')){\n            if(!isCorToggle){\n                setCor(parseInt(corazones)+1)\n                setCorToggle(true)\n            }else{\n                setCor(parseInt(corazones)-1)\n                setCorToggle(false)\n            }\n        }\n    }\n    \n    return(\n        <div>\n            <Row>\n            <Col>\n                <Card>\n                <CardBody>\n                    <Row><Col><strong><img src={props.post.image} alt=\"Img\"/> {props.post.user}</strong></Col></Row>\n                    <Row>\n                    <Col>\n                        {props.post.message}\n                    </Col>\n                    </Row>\n                    <Row>\n                    <div className='fila_atributos'>\n                        <div className='fila_numeros'>\n                        <div className='elemento_atributo'>\n                            <BsChat />\n                        </div>\n\n                        <div className='elemento_atributo retuit' id={'retuit_'+props.indice }  onClick={() => toggleClass(('retuit_'+props.indice))} >\n                            <AiOutlineRetweet />\n                            <small>{retuits}</small>\n                        </div>\n                        <div className='elemento_atributo corazon' id={'corazon_'+props.indice }  onClick={() => toggleClass(('corazon_'+props.indice))}>\n                            <AiFillHeart />\n                            <small>{corazones}</small>\n                        </div>\n                        </div>\n                        <div className='fila_fecha'>\n                        <small>{getDateInStrFormat(new Date(props.post.publicationdate))}</small>\n                        </div>\n                    </div>\n                    </Row>\n                </CardBody>\n                </Card>\n            </Col>\n            </Row>\n            <br/>\n        </div>\n        )\n}","import axios from 'axios';\nimport config from '../config.js';\n\nexport default axios.create({\n  baseURL: config.baseURL_API\n});","import React, { useState } from 'react';\nimport { Card, CardTitle, Label, Button, Form, FormGroup, Input } from 'reactstrap';\n\nimport { postNewPost } from \"../../utils/apicalls.js\";\n\nexport default function AddPost(props){\n\n  const [message, setMessage] = useState('');\n\n  const addPost = (e) => {\n    e.preventDefault();\n    let retuits = Math.floor((Math.random() * 10) + 1)\n    let corazones = Math.floor((Math.random() * 10) + 1)\n    postNewPost(sessionStorage.getItem('email'),sessionStorage.getItem('name'), retuits, corazones, sessionStorage.getItem('image'), message)\n      .then((res) => checkPOSTNewPost(res));\n  }\n\n  const checkPOSTNewPost = (res) => {\n    if (res === \"OK\"){\n      props.updateMyPosts();\n    }\n  }\n\n  return (\n    <div>\n      <Card body>\n        <CardTitle tag=\"h5\">Añadir un nuevo post</CardTitle>\n        <Form>\n          <FormGroup>\n            <Label for=\"aMensaje\">Mensaje</Label>\n            <Input style={{height: '200px'}} type=\"textarea\" name=\"message\" value={message} id=\"aMensaje\" placeholder=\"Introduce un mensaje\" onChange={(e) => setMessage(e.target.value)}/>\n          </FormGroup>\n          <Button color=\"primary\" onClick={addPost}>Añadir</Button>\n        </Form>\n      </Card>\n    </div>\n  );\n}","import API from './api';\n\nexport {\n  getAllPosts,\n  getMyPosts,\n  postNewPost,\n  putExistingPost,\n  deletePost\n};\n\nfunction getAllPosts() {\n  return API.get('/posts').then(res => res.data);\n}\n\nfunction getMyPosts(email) {\n  return API.get('/posts/all/'+email).then(res => res.data);\n}\n\nfunction postNewPost(email, user, retuit, corazon, image, message) {\n  return API.post('/posts', {\n    email,\n    user,\n    image,\n    retuit,\n    corazon,\n    message}).then(result => result.data);\n}\n\nfunction putExistingPost(idpost, message) {\n  return API.put('/posts/'+idpost, {\n    message}).then(result => result.data);\n}\n\nfunction deletePost(idpost) {\n  return API.delete('/posts/'+idpost).then(result => result.data);\n}","import React, { useState, useEffect } from 'react';\nimport { Card, CardTitle, Label, Button, Form, FormGroup, Input } from 'reactstrap';\n\nimport { putExistingPost } from \"../../utils/apicalls.js\";\n\nexport default function EditPost(props){\n\n  const [message, setMessage] = useState(props.post.message);\n\n  const editPost = (e) => {\n    e.preventDefault();\n    //Update post in database with put api call\n    putExistingPost(props.post._id, message)\n      .then((res) => checkPUTPost(res));\n  }\n\n  //Check the response from the server\n  const checkPUTPost = (res) => {\n    if (res === \"OK\"){\n      //TODO Show Modal when a the post is updated\n      props.updateMyPosts();\n    }else{\n      //TODO Show Modal when an error updating the post occurs\n    }\n  }\n\n  useEffect(() =>{\n    setMessage(props.post.message);\n  },[props.post]);\n\n  return (\n    <div>\n      <Card body>\n        <CardTitle tag=\"h5\">Editar post</CardTitle>\n        <Form>\n          <FormGroup>\n            <Label for=\"aDescripcion\">Mensaje</Label>\n            <Input style={{height: '200px'}} type=\"textarea\" name=\"message\" id=\"aDescripcion\" placeholder=\"Introduce un mensaje\" value={message} onChange={(e) => setMessage(e.target.value)}/>\n          </FormGroup>\n            <Button color=\"primary\" onClick={editPost}>Actualizar</Button>\n        </Form>\n      </Card>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport '../../styles.css';\nimport '../css/MyPostList.css'\nimport PostItem from './PostItem'\n\nimport { Row, Col, CardTitle, Badge,\nTable, Alert, Button, Nav, NavItem, NavLink, TabContent,\nTabPane, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport { AiFillEdit, AiFillDelete } from 'react-icons/ai';\n\nimport { getMyPosts, deletePost } from \"../../utils/apicalls.js\";\n\nimport AddPost from './AddPost';\nimport EditPost from './EditPost';\n\nexport default function MyPostList(props){\n\n  const [posts, setPosts] = useState([]);\n  const [edit, setEdit] = useState(<Alert color=\"warning\">Seleccione editar un post de la lista</Alert>);\n  const [activeTab, setActiveTab] = useState('1');\n  const [showDeleteModal, setShowDeleteModal] = useState(null);\n\n  const getPosts = () => {\n      getMyPosts(sessionStorage.getItem('email')).then((posts) => {\n          setPosts(posts);\n      });\n  }\n\n  const toggleTab = (tab) => {\n    if (activeTab !== tab)\n      setActiveTab(tab);\n  }\n\n  const handleUpdateMyPosts = () => {\n    getPosts();\n  }\n\n  const askForDelete = (post) => {\n    setShowDeleteModal(\n      <Modal isOpen=\"true\" className={props.className}>\n        <ModalHeader>Eliminar post</ModalHeader>\n        <ModalBody>\n          Se va a eliminar el post:<br/><small><strong>{post.message}</strong></small>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={() => deletePostSel(post)}>Eliminar</Button>{' '}\n          <Button color=\"secondary\" onClick={() => setShowDeleteModal(null)}>Cancelar</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n\n  const deletePostSel = (post) => {\n    deletePost(post._id)\n      .then((res) => checkDELETEPost(res));\n  }\n\n  const checkDELETEPost = (res) => {\n    if (res === \"OK\"){\n      setShowDeleteModal(null);\n      setEdit(<Alert color=\"warning\">Seleccione editar un post de la lista</Alert>);\n      handleUpdateMyPosts();\n    }\n  }\n\n  const handleShowEdit = (post) => {\n    setActiveTab(\"2\")\n    setEdit(<EditPost post= {post} updateMyPosts = {handleUpdateMyPosts} />);\n  }\n\n  useEffect(() =>{\n    getPosts();\n  },[]);\n\n  return(\n    <div>\n      {showDeleteModal}\n      <Row>\n        <Col xs=\"7\">\n          <CardTitle tag=\"center\"><Alert color=\"primary\"><strong>Mis Posts publicados </strong><Badge pill>{posts.length}</Badge></Alert></CardTitle>\n          <Table>\n            <tbody>\n            { posts.map((post, index) => {\n              return (\n                <div className='edit_card_body'>\n                  <div className='edit_buttons'>\n                    <Button outline onClick={() => handleShowEdit(post)}><AiFillEdit /></Button>\n                    {' '}\n                    <Button outline onClick={() => askForDelete(post)}><AiFillDelete /></Button>\n                  </div>\n                  <PostItem post={post} indice={index}/>\n                </div>\n              )\n            })}\n            </tbody>\n          </Table>\n        </Col>\n        <Col xs=\"5\">\n          <Nav tabs>\n            <NavItem>\n              <NavLink href=\"#\" className={classnames({ active: activeTab === '1' })} onClick={() => toggleTab('1')}>\n                Añadir\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"#\" className={classnames({ active: activeTab === '2' })} onClick={() => toggleTab('2')}>\n                Editar\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={activeTab}>\n            <TabPane tabId=\"1\">\n              <Row>\n                <Col sm=\"12\">\n                  <AddPost updateMyPosts = {handleUpdateMyPosts}/>\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane tabId=\"2\">\n              <Row>\n                <Col sm=\"12\">\n                  {edit}\n                </Col>\n              </Row>\n            </TabPane>\n          </TabContent>\n        </Col>\n      </Row>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { CardTitle, Badge, Table, Alert } from 'reactstrap';\nimport '../../styles.css';\nimport '../css/PostList.css'\nimport PostItem from './PostItem'\n\nimport { getAllPosts } from \"../../utils/apicalls.js\";\n\nexport default function PostList(props){\n\n  const [posts, setPosts] = useState([]);\n\n  const getPosts = () => {\n    getAllPosts().then((posts) => {\n      setPosts(posts);\n    });\n  }\n\n  const toggleClass = (elem_id, new_class) =>{\n    var div_heart = document.getElementById(elem_id);\n    div_heart.classList.toggle('activado');\n  }\n  \n  useEffect(() =>{\n    getPosts();\n  },[]);\n\n  return (\n    <div>\n    <CardTitle tag=\"center\"><Alert color=\"primary\"><strong>Posts publicados </strong><Badge pill>{posts.length}</Badge></Alert></CardTitle>\n    <Table>\n      <tbody>\n        { posts.map((post, index) => {\n          return <PostItem post={post} indice={index}/>\n          })}\n        </tbody>\n      </Table>\n    </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/icon.b080bea3.ico\";","import React, { useState } from 'react';\nimport { Navbar, NavbarBrand, Button, Nav, NavItem, Media, Row, Col, Container,Toast, ToastBody, ToastHeader  } from 'reactstrap';\nimport './css/App.css'\n\nimport PostList from './posts/PostList';\n\nimport { GoogleLogin } from 'react-google-login';\nimport config from '../config.js';\n\nimport tuiter_icon from '../images/icon.ico';\nvar imgStyle = {\n  maxWidth: \"85px\",\n};\n\nexport default function App(props){\n\n  const [loginMessage, setLoginMessage] = useState(null);\n  const [toastColor, setToastColor] = useState(null);\n  const [show, setShow] = useState(false);\n  \n  const responseGoogleSuccess = (googleUser) => {\n    var profile = googleUser.getBasicProfile();\n\n    sessionStorage.setItem('name', profile.getName());\n    sessionStorage.setItem('email', profile.getEmail());\n    sessionStorage.setItem('image', profile.getImageUrl());\n    props.history.push(\"/home\");\n\n    setShow(true)\n    setToastColor(\"success\")\n    setLoginMessage(\"Autenticado correctamente.\")\n    timeoutToast()\n\n\n  }\n\n  const responseGoogleFailure = (response) => {\n      setShow(true)\n      setToastColor(\"danger\")\n      setLoginMessage(\"Error en la autenticacion.\")\n      timeoutToast()\n  }\n\n  const timeoutToast = () =>{\n    window.setTimeout(()=>{\n      setShow(false)\n    },3000)\n  }\n\n\n  const closeToast = () =>{\n    setShow(false)\n  }\n  return(\n    <Container>\n        <Toast className='react_toast' isOpen={show}>\n          <ToastHeader icon={toastColor}>\n            El Tuiter\n          </ToastHeader>\n          <ToastBody>\n            <p>\n              {loginMessage}\n            </p>\n            <Button outline onClick={closeToast} size=\"sm\">\n              Ok\n            </Button>\n          </ToastBody>\n        </Toast>\n      <Row>\n        <Col>\n          <Navbar color=\"primary\" light expand=\"md\">\n          <Media style={imgStyle} object src={tuiter_icon} alt=\"Bird\"/>\n          <NavbarBrand>\n            <span className=\"app_title\"> El Tuiter </span>\n          </NavbarBrand>\n          <Nav navbar>\n            <NavItem>\n              <GoogleLogin\n                clientId={config.clientID}\n                buttonText=\"Login with Google\"\n                theme='dark'\n                onSuccess={responseGoogleSuccess}\n                onFailure={responseGoogleFailure}\n              />\n            </NavItem>\n          </Nav>\n          </Navbar>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs= \"12\">\n          <PostList/>\n        </Col>\n      </Row>\n    </Container>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Home from './components/Home';\nimport App from './components/App';\n\nReactDOM.render(<HashRouter>\n      <div>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/home\" component={Home} />\n      </div>\n   </HashRouter >, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useState } from 'react';\nimport {Container, Row, Col } from 'reactstrap';\n\nimport HeaderDashboard from './HeaderDashboard';\nimport MyPostList from './posts/MyPostList';\nimport PostList from './posts/PostList';\n\nexport default function Home(props){\n\n  const [show, setShow] = useState(<PostList />);\n \n  const handleLogout = () => {\n    sessionStorage.clear();\n    props.history.push(\"/\");\n  }\n\n  const handleOnShow = (option) => {\n    if (option === 1){\n      setShow(<PostList />);\n    }else if (option === 2){\n      setShow(<MyPostList />);\n    }\n  }\n\n  if (sessionStorage.getItem(\"name\") === null){\n    props.history.push(\"/\");\n  }\n  else{\n    return (\n      <Container>\n        <Row>\n          <Col><HeaderDashboard onLogout={handleLogout} onShow= {handleOnShow} /></Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\">\n              {show}\n            </Col>\n        </Row>\n      </Container>\n    );\n  }\n}"],"sourceRoot":""}